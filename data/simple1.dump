ProgInterp (table = [], fundefs = [
{name = interpret.39; args = [bytecode.40, pc.41, a.42]; fargs = []; body = 
  Let ((opcode.61, Int), Ld (bytecode.40, pc.41 4), 
  Ans (IfEq (opcode.61, 0, 
  Let ((Ti20.81, Int), Add (pc.41, 1), 
  Let ((Ti22.83, Int), Add (a.42, 1), 
  Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti20.81, Ti22.83], [])))), 
  Ans (IfEq (opcode.61, 1, 
  Let ((Ti25.77, Int), Add (pc.41, 1), 
  Let ((Ti27.79, Int), Sub (a.42, 1), 
  Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti25.77, Ti27.79], [])))), 
  Ans (IfEq (opcode.61, 2, 
  Let ((Ti30.71, Int), Add (pc.41, 1), 
  Let ((target.72, Int), Ld (bytecode.40, Ti30.71 4), 
  Ans (IfLE (a.42, 0, 
  Let ((Ti33.75, Int), Add (pc.41, 2), 
  Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti33.75, a.42], []))), 
  Ans (CallDir (Id.L (interpret.39), [bytecode.40, target.72, a.42], [])))))), 
  Ans (IfEq (opcode.61, 3, 
  Let ((Ti36.68, Int), Add (pc.41, 1), 
  Let ((target.69, Int), Ld (bytecode.40, Ti36.68 4), 
  Ans (CallDir (Id.L (interpret.39), [bytecode.40, target.69, a.42], [])))), 
  Ans (IfEq (opcode.61, 4, 
  Ans (Mov (a.42)), 
  Ans (Set (-1))))))))))))); ret = Int}],
 main_exp = 
  Let ((Ti5.43, Int), Set (100), 
  Let ((Ti6.44, Int), Set (0), 
  Let ((input.45, Array (Int)), CallDir (Id.L (min_caml_create_array), [Ti5.43, Ti6.44], []), 
  Let ((Ti8.47, Int), Set (1), 
  Let ((Tu4.48, Unit), St (Ti8.47, input.45, 0, 4), 
  Let ((Ti10.50, Int), Set (2), 
  Let ((Tu3.51, Unit), St (Ti10.50, input.45, 1, 4), 
  Let ((Ti12.53, Int), Set (0), 
  Let ((Tu2.54, Unit), St (Ti12.53, input.45, 2, 4), 
  Let ((Ti14.56, Int), Set (4), 
  Let ((Tu1.57, Unit), St (Ti14.56, input.45, 3, 4), 
  Let ((Ti15.58, Int), Set (0), 
  Let ((Ti16.59, Int), Set (100), 
  Let ((Ti17.60, Int), CallDir (Id.L (interpret.39), [input.45, Ti15.58, Ti16.59], []), 
  Ans (CallDir (Id.L (min_caml_print_int), [Ti17.60], [])))))))))))))))),
 labels = (Id.L (interpret.39), 0))