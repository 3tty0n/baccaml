{ name = interpret.39, args = [bytecode.40, pc.41, a.42], body =
(* DECR_A *)
Let ((opcode.61, Int), Ld (bytecode.40, pc.41 4),
Let ((Ti23.63, Int), Set (1),
Ans (IfEq (opcode.61, Ti23.63,
Let ((Ti24.76, Int), Set (1),
Let ((Ti25.77, Int), Add (pc.41, Ti24.76),
Let ((Ti26.78, Int), Set (1),
Let ((Ti27.79, Int), Sub (a.42, Ti26.78),
Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti25.77, Ti27.79], [])))))))))),
(* JUMP_IF *)
Let ((Ti28.64, Int), Set (2),
Ans (IfEq (opcode.61, Ti28.64,
Let ((Ti29.70, Int), Set (1),
Let ((Ti30.71, Int), Add (pc.41, Ti29.70),
Let ((target.72, Int), Ld (bytecode.40, Ti30.71 4),
Let ((Ti31.73, Int), Set (0),
Ans (IfLE (a.42, Ti31.73,
Let ((Ti32.74, Int), Set (2),
Let ((Ti33.75, Int), Add (pc.41, Ti32.74),
Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti33.75, a.42], [])))),
Ans (CallDir (Id.L (interpret.39), [bytecode.40, target.72, a.42], []))))))))))),
}

(* 最適化を行ったトレース *)
{ name = interpret.39, args = [bytecode.40, pc.41, a.42], body =
(* DECR_A *)
Ans (GuardEq(opcode.61, 1),
Let ((Ti25.77, Int), Add (pc.41, 1)),
Let ((Ti27.79, Int), Sub (a.42, 1)),
Ans (CallDir (Id.L (interpret.39), [bytecode.40, Ti25.77, Ti27.79]))
(* JUMP_IF *)
Ans (GuardEq (opcode.61, 2)),
Let ((Ti30.71, Int), Add (pc.41, 1),
Let ((target.72, Int), Ld (bytecode.40, Ti30.71 4),
Ans (GuardIfLE (a.42, 0))
Ans (CallDir (Id.L (interpret.39), [bytecode.40, target.72, a.42], []))))))))))),
}

(* さらに最適化を行う *)
(* Let ((target.72, Int), Ld (bytecode.40, Ti30.71 4) == 0 *)

{ name = interpret.39, arg = [bytecode.40, a.42], body =
(* DECR_A *)
Let ((a.42, Int), Sub (a.42, 1)),
(* JUMP_IF *)
Ans (GuardIfLE (a.42, 0))
Ans (CallDir (Id.L (interpret.39), [bytecode.40, 0, a.42], []))))))))))),
}